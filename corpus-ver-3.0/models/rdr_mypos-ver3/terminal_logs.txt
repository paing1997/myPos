Step1: Remove Pipe "|" from training, closed and open test files:
******************************************************************************
(base) zar@zar-zar:~/1_pos_model_setup/rdr_mypos-ver3$ ./pipe2space-all.sh

 Finished replacing pipe with space for ./t1/train1!

 Finished replacing pipe with space for ./otest!
 
 >>>>>>>
 
 Step2: Training:
 ================
(base) zar@zar-zar:~/1_pos_model_setup/rdr_mypos-ver3$ time ./train-rdr-all.sh | tee rdr-train.log

====== Start ======

Generate from the gold standard training corpus a lexicon /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.DICT

Extract from the gold standard training corpus a raw text corpus /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.RAW

Perform initially POS tagging on the raw text corpus, to generate /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.INIT

Learn a tree model of rules for POS tagging from /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe and /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.INIT

===> Building exception rules for tag adv

===> Building exception rules for tag abb

===> Building exception rules for tag punc

===> Building exception rules for tag fw

===> Building exception rules for tag int

===> Building exception rules for tag num

===> Building exception rules for tag n

===> Building exception rules for tag tn

===> Building exception rules for tag pron

===> Building exception rules for tag part

===> Building exception rules for tag ppm

===> Building exception rules for tag v

===> Building exception rules for tag sb

===> Building exception rules for tag conj

===> Building exception rules for tag adj

Write the learned tree model to file /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.RDR

Done!

 Finished RDR training for train1!

real	12m54.435s
user	12m52.950s
sys	0m0.420s

>>>>>>>

Step3: Making word only files for training and open test data files:
====================================================================
(base) zar@zar-zar:~/1_pos_model_setup/rdr_mypos-ver3$ ./prepare-word-files4rdr.sh

Finished for ./t1/train1.nopipe!

Finished for ./otest.nopipe!

>>>>>>>

===============================================================================================

Step4: Copy ./rdr/otest.nopipe.word files to the training folder (./t1/)
(This step is requried because of RDR output file will be written based on the input test file path.)
******************************************************************************

(base) zar@zar-zar:~/1_pos_model_setup/rdr_mypos-ver3$ for((i=1;i<=1;i+=1)); do cp otest.nopipe.word ./t$i/; done;


In this case, I used only one training folder

===============================================================================================

Step5: Testing with closed and open test data for all models train1 to train10:
******************************************************************************

(base) zar@zar-zar:~/1_pos_model_setup/rdr_mypos-ver3$ time ./test-all.sh | tee rdr-test.log

=> Read a POS tagging model from /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.RDR

=> Read a lexicon from /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/train1.nopipe.DICT

=> Perform POS tagging on /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/otest.nopipe.word

Output file: /home/zar/1_pos_model_setup/rdr_mypos-ver3/t1/otest.nopipe.word.TAGGED

 Finished testing with open test data file with train1 RDR model!

real	0m0.446s
user	0m0.819s
sys	0m0.024s

===============================================================================================

Step6: Evaluation
*****************

(base) zar@zar-zar:~/1_pos_model_setup/rdr_mypos-ver3$ time ./evaluate-all.sh | tee rdr-evaluate-results.log

### Evaluation for RDR train1 model ###

   -with open test data
Tag precision: 0.965250965251
Tag Recall: 0.965250965251
Tag F-Measure:  0.965250965251

real	0m0.033s
user	0m0.030s
sys	0m0.004s

===============================================================================================
